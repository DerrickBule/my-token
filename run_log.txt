No files changed, compilation skipped

Ran 7 tests for test/BankTest.t.sol:BankTest
[PASS] testDepositUpdatesBalance() (gas: 99763)
Traces:
  [99763] BankTest::testDepositUpdatesBalance()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [473] Bank::balances(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]) [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [0] VM::assertEq(1000000000000000000 [1e18], 1000000000000000000 [1e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[FAIL: Error != expected error: Insufficient balance != Only admin can withdraw] testOnlyAdminCanWithdraw() (gas: 104157)
Traces:
  [514283] BankTest::setUp()
    ├─ [357591] → new Bank@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   └─ ← [Return] 1786 bytes of code
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]
    ├─ [0] VM::label(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], "user1")
    │   └─ ← [Return] 
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]
    ├─ [0] VM::label(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], "user2")
    │   └─ ← [Return] 
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec]
    ├─ [0] VM::label(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], "user3")
    │   └─ ← [Return] 
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0]
    ├─ [0] VM::label(user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0], "user4")
    │   └─ ← [Return] 
    └─ ← [Stop] 

  [104157] BankTest::testOnlyAdminCanWithdraw()
    ├─ [0] VM::deal(BankTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(BankTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: BankTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Only admin can withdraw)
    │   └─ ← [Return] 
    ├─ [2539] Bank::withdraw(1)
    │   └─ ← [Revert] revert: Insufficient balance
    └─ ← [Revert] Error != expected error: Insufficient balance != Only admin can withdraw

[PASS] testTopThreeWithFourUsers() (gas: 303986)
Traces:
  [303986] BankTest::testTopThreeWithFourUsers()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], 2000000000000000000 [2e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802])
    │   └─ ← [Return] 
    ├─ [68574] Bank::deposit{value: 2000000000000000000}()
    │   ├─ emit Deposit(account: user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], amount: 2000000000000000000 [2e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], 3000000000000000000 [3e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec])
    │   └─ ← [Return] 
    ├─ [68574] Bank::deposit{value: 3000000000000000000}()
    │   ├─ emit Deposit(account: user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], amount: 3000000000000000000 [3e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0], 4000000000000000000 [4e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0])
    │   └─ ← [Return] 
    ├─ [28774] Bank::deposit{value: 4000000000000000000}()
    │   ├─ emit Deposit(account: user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0], amount: 4000000000000000000 [4e18])
    │   └─ ← [Stop] 
    ├─ [499] Bank::topThreeDepositors(0) [staticcall]
    │   └─ ← [Return] user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0]
    ├─ [0] VM::assertEq(user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0], user4: [0x90561e5Cd8025FA6F52d849e8867C14A77C94BA0]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(0) [staticcall]
    │   └─ ← [Return] 4000000000000000000 [4e18]
    ├─ [0] VM::assertEq(4000000000000000000 [4e18], 4000000000000000000 [4e18]) [staticcall]
    │   └─ ← [Return] 
    ├─ [499] Bank::topThreeDepositors(1) [staticcall]
    │   └─ ← [Return] user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec]
    ├─ [0] VM::assertEq(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(1) [staticcall]
    │   └─ ← [Return] 3000000000000000000 [3e18]
    ├─ [0] VM::assertEq(3000000000000000000 [3e18], 3000000000000000000 [3e18]) [staticcall]
    │   └─ ← [Return] 
    ├─ [499] Bank::topThreeDepositors(2) [staticcall]
    │   └─ ← [Return] user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]
    ├─ [0] VM::assertEq(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(2) [staticcall]
    │   └─ ← [Return] 2000000000000000000 [2e18]
    ├─ [0] VM::assertEq(2000000000000000000 [2e18], 2000000000000000000 [2e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testTopThreeWithOneUser() (gas: 101172)
Traces:
  [101172] BankTest::testTopThreeWithOneUser()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [499] Bank::topThreeDepositors(0) [staticcall]
    │   └─ ← [Return] user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]
    ├─ [0] VM::assertEq(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(0) [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [0] VM::assertEq(1000000000000000000 [1e18], 1000000000000000000 [1e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testTopThreeWithSameUserMultipleDeposits() (gas: 113077)
Traces:
  [113077] BankTest::testTopThreeWithSameUserMultipleDeposits()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 3000000000000000000 [3e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [3934] Bank::deposit{value: 2000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 2000000000000000000 [2e18])
    │   └─ ← [Stop] 
    ├─ [499] Bank::topThreeDepositors(0) [staticcall]
    │   └─ ← [Return] user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]
    ├─ [0] VM::assertEq(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(0) [staticcall]
    │   └─ ← [Return] 3000000000000000000 [3e18]
    ├─ [0] VM::assertEq(3000000000000000000 [3e18], 3000000000000000000 [3e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testTopThreeWithThreeUsers() (gas: 264932)
Traces:
  [264932] BankTest::testTopThreeWithThreeUsers()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], 2000000000000000000 [2e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802])
    │   └─ ← [Return] 
    ├─ [68574] Bank::deposit{value: 2000000000000000000}()
    │   ├─ emit Deposit(account: user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], amount: 2000000000000000000 [2e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], 3000000000000000000 [3e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec])
    │   └─ ← [Return] 
    ├─ [68574] Bank::deposit{value: 3000000000000000000}()
    │   ├─ emit Deposit(account: user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], amount: 3000000000000000000 [3e18])
    │   └─ ← [Stop] 
    ├─ [499] Bank::topThreeDepositors(0) [staticcall]
    │   └─ ← [Return] user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec]
    ├─ [0] VM::assertEq(user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec], user3: [0xc0A55e2205B289a967823662B841Bd67Aa362Aec]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(0) [staticcall]
    │   └─ ← [Return] 3000000000000000000 [3e18]
    ├─ [0] VM::assertEq(3000000000000000000 [3e18], 3000000000000000000 [3e18]) [staticcall]
    │   └─ ← [Return] 
    ├─ [499] Bank::topThreeDepositors(1) [staticcall]
    │   └─ ← [Return] user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]
    ├─ [0] VM::assertEq(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(1) [staticcall]
    │   └─ ← [Return] 2000000000000000000 [2e18]
    ├─ [0] VM::assertEq(2000000000000000000 [2e18], 2000000000000000000 [2e18]) [staticcall]
    │   └─ ← [Return] 
    ├─ [499] Bank::topThreeDepositors(2) [staticcall]
    │   └─ ← [Return] user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]
    ├─ [0] VM::assertEq(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(2) [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [0] VM::assertEq(1000000000000000000 [1e18], 1000000000000000000 [1e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testTopThreeWithTwoUsers() (gas: 183057)
Traces:
  [183057] BankTest::testTopThreeWithTwoUsers()
    ├─ [0] VM::deal(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], 1000000000000000000 [1e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF])
    │   └─ ← [Return] 
    ├─ [80674] Bank::deposit{value: 1000000000000000000}()
    │   ├─ emit Deposit(account: user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], amount: 1000000000000000000 [1e18])
    │   └─ ← [Stop] 
    ├─ [0] VM::deal(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], 2000000000000000000 [2e18])
    │   └─ ← [Return] 
    ├─ [0] VM::prank(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802])
    │   └─ ← [Return] 
    ├─ [68574] Bank::deposit{value: 2000000000000000000}()
    │   ├─ emit Deposit(account: user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], amount: 2000000000000000000 [2e18])
    │   └─ ← [Stop] 
    ├─ [499] Bank::topThreeDepositors(0) [staticcall]
    │   └─ ← [Return] user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]
    ├─ [0] VM::assertEq(user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802], user2: [0x537C8f3d3E18dF5517a58B3fB9D9143697996802]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(0) [staticcall]
    │   └─ ← [Return] 2000000000000000000 [2e18]
    ├─ [0] VM::assertEq(2000000000000000000 [2e18], 2000000000000000000 [2e18]) [staticcall]
    │   └─ ← [Return] 
    ├─ [499] Bank::topThreeDepositors(1) [staticcall]
    │   └─ ← [Return] user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]
    ├─ [0] VM::assertEq(user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF], user1: [0x29E3b139f4393aDda86303fcdAa35F60Bb7092bF]) [staticcall]
    │   └─ ← [Return] 
    ├─ [471] Bank::topThreeBalances(1) [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [0] VM::assertEq(1000000000000000000 [1e18], 1000000000000000000 [1e18]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

Suite result: FAILED. 6 passed; 1 failed; 0 skipped; finished in 1.09ms (1.21ms CPU time)

Ran 2 tests for test/Counter.t.sol:CounterTest
[PASS] testFuzz_SetNumber(uint256) (runs: 256, μ: 31277, ~: 31277)
Traces:
  [31277] CounterTest::testFuzz_SetNumber(827941864831970080908058874318737007016 [8.279e38])
    ├─ [22287] Counter::setNumber(827941864831970080908058874318737007016 [8.279e38])
    │   └─ ← [Stop] 
    ├─ [281] Counter::number() [staticcall]
    │   └─ ← [Return] 827941864831970080908058874318737007016 [8.279e38]
    ├─ [0] VM::assertEq(827941864831970080908058874318737007016 [8.279e38], 827941864831970080908058874318737007016 [8.279e38]) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] test_Increment() (gas: 31293)
Traces:
  [31293] CounterTest::test_Increment()
    ├─ [22337] Counter::increment()
    │   └─ ← [Stop] 
    ├─ [281] Counter::number() [staticcall]
    │   └─ ← [Return] 1
    ├─ [0] VM::assertEq(1, 1) [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 4.69ms (4.45ms CPU time)

Ran 2 test suites in 90.83s (5.78ms CPU time): 8 tests passed, 1 failed, 0 skipped (9 total tests)

Failing tests:
Encountered 1 failing test in test/BankTest.t.sol:BankTest
[FAIL: Error != expected error: Insufficient balance != Only admin can withdraw] testOnlyAdminCanWithdraw() (gas: 104157)

Encountered a total of 1 failing tests, 8 tests succeeded
